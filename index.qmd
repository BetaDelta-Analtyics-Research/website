---
title: "Chart Better. Lead Better."
format:
  html:
    theme: lux
    page-layout: full
    margin-header: |
     <input type="button" class="btn btn-danger" onclick="location.href='https://share.hsforms.com/1I8JrOQTdS2SPY59SMnyfNge0x16';" value="GET CHARTS">
    grid:
      sidebar-width: 100px
      body-width: 1200px
      margin-width: 100px
---

###### Reach your audience.

###### Resonate with your people.

###### Be understood.

###### Build credibility.

###### One chart at a time.

![](pexels-alex-andrews-1203808.jpg)

## Save time and effort.

Get help communicating with data visualization.

1.  Tell us what you're looking for and we'll deliver publication-ready content.
2.  Securely collaborate through Google Drive, Microsoft Teams, or Github.
3.  After delivery, pay what you think it's worth.

An ideal solution for business leaders, influencers, entrepreneurs, small business owners, marketers, copywriters, graphic designers, investment advisors, non-profit executives, public administrators, insurance professionals, researchers, etc.

<i class="bi bi-graph-up" ></i> <input type="button" class="btn btn-danger" onclick="location.href='https://share.hsforms.com/1I8JrOQTdS2SPY59SMnyfNge0x16';" value="GET CHARTS">

<i class="bi bi-calendar-week-fill" ></i> <input type="button" class="btn btn-info" onclick="location.href='https://calendly.com/brian-davidhizar/30min';" value="SCHEDULE AN APPOINTMENT">

------------------------------------------------------------------------

## Portfolio

This chart is better visualized on [Tableau Public](https://public.tableau.com/views/ChevyCamaro/Dashboard1?:language=en-US&:display_count=n&:origin=viz_share_link).

![](camaro.png)

------------------------------------------------------------------------

```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=5.5, fig.width=7.5, dev = "png", dpi=100}
library(tidyverse)
library(readxl)
library(ggrepel)
library(geomtextpath)
library(tidyquant)
library(tidyverse)

colorp <- c("#252525", "#969696", "#a50f15")

sp500_prices  <- tq_get("^GSPC", get = "stock.prices", from = " 1928-01-01")

sp500_monthly <- sp500_prices %>%
  group_by(symbol) %>%
  tq_transmute(select = adjusted, mutate_fun = to.monthly, indexAt = "lastof")

sp500_returns <- tq_get("^GSPC", get  = "stock.prices", from = "1928-01-01", to   = "2022-11-30") %>%
  tq_transmute(adjusted, periodReturn, period = "monthly", col_rename = "sp500.returns")

sp500_xts <- xts(sp500_returns$sp500.returns, order.by=sp500_returns$date)

sp500_40 <- rollapply(sp500_xts, width = 480, FUN = Return.annualized, fill = 0) 
names(sp500_40) <- "S&P 500"
sp500_40 <- sp500_40[480:length(sp500_40)]


ggplot(sp500_40, aes(x=index(sp500_40), y=sp500_40$`S&P 500`*100)) + 
  geom_line() +
  geom_hline(yintercept=7, linetype=2, color=colorp[3]) +
  geom_text(aes(index(sp500_40)[1],7),label = '7% growth', vjust = -1, hjust=.3, color=colorp[3], family='serif', size=4) +
  geom_hline(yintercept=9, linetype=2, color=colorp[3]) +
  geom_text(aes(index(sp500_40)[1],9),label = '9% growth', vjust = -1, hjust=.3, color=colorp[3], family='serif', size=4) +
  labs(title = "S&P 500 Frequently Achieved 7% Annualized Growth Over 40-Year Periods",
       subtitle = "S&P 500 Rolling 40-Year Returns Annualized",
       caption = "Data visaulization by BetaDelta Analytics & Research
                  \n Source: Yahoo Finance Historical Data: Adjusted Prices for ^GSPC
                  \n R package used for gathering data and annualizing returns: tidyquant") + 
  xlab("") +
  ylab("") +
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  theme_classic() +
  theme(plot.title=element_text(size=16),
        plot.caption=element_text(size=8, color=colorp[1]),
        axis.title.x=element_text(size=14, hjust = 0),
        axis.title.y=element_blank(), #element_text(size=14),
        axis.text.y = element_text(size=10, hjust = 0), #element_blank(),  #remove y axis labels
        axis.ticks.y= element_blank(),
        axis.line.y = element_blank(),
        text=element_text(family = "serif") #remove y axis ticks
  )
```

------------------------------------------------------------------------

```{r, warning=FALSE, message=FALSE, echo=FALSE, fig.height=5.5, fig.width=7.5, dev = "png", dpi=100}

df <- read_xlsx("Growth of 10 Dollars Table Seven.xlsx")

df_points <- rbind(head(df,1), df[120,], df[240,], df[360,], tail(df,1))

colorp <- c("#252525", "#969696", "#a50f15")

ggplot(df, aes(date, value)) + 
  geom_textline(label = "$10  a day invested monthly @ 7% annual growth.", 
                linewidth = 1, color = colorp[1], vjust = 1.5, hjust = 0.75, family = "serif", size = 5) +
  geom_point(data = df_points, aes(date, value), size = 4, color = colorp[3], family = "serif") +
  geom_text_repel(data = df_points, aes(label = scales::dollar(round(value,0))), 
            size = 4, color = colorp[1], direction="both", vjust = -1.5, hjust = 1.2, point.padding = 10, 
            family = "serif") + 
  labs(title = "What habit can you change to save $10 a day?",
       subtitle = "Financial coaching can help you change your life. \n7% annual return on investment is no guarantee, but totally doable.",
       caption = "\n Data visaulization by BetaDelta Analytics & Research") + 
  xlab(" \n 40 years starting New Year's 2023.  You can do it.") +
  ylab("") +
  theme_classic() +
  theme(plot.title=element_text(size=16),
        plot.caption=element_text(size=8, color=colorp[1]),
        axis.title.x=element_text(size=14, hjust = 0),
        axis.title.y=element_blank(), #element_text(size=14),
        axis.text.y=element_blank(),  #remove y axis labels
        axis.ticks.y=element_blank(),
        axis.line.y = element_blank(),
        text=element_text(family = "serif") #remove y axis ticks
        )
```

------------------------------------------------------------------------

## Data & Analytics Specialties

-   Partnering with clients to understand requirements and deliver great products.

-   Creating data visualizations that are fit-for-purpose, easy to integrate, & easy to socialize.

-   Building charts and tables you can actually understand.

-   Delivering situational awareness through Tableau/PowerBI dashboards.

-   Accelerating important business conversations by leveraging data more powerfully.

-   Scaling data visualization and reporting programmatically using R, Python, & SQL.

-   Organizing data and reporting using Microsoft Excel.
